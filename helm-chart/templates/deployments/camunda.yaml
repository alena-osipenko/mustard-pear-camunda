apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.image.name }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  selector:
    matchLabels:
      app: {{ .Values.image.name }}
  replicas: {{ .Values.deployment.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.image.name }}
    spec:
      containers:
      - name: {{ .Values.image.name}}
        image: {{ .Values.image.repository }}{{ .Values.image.tag }}/{{ .Values.image.name }}:{{ .Values.image.dockertag }}
        env:
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: password
          - name: DB_DRIVER
            value: "org.postgresql.Driver"
          - name: DB_URL
            value: "jdbc:postgresql://{{ .Values.db.host }}:{{ .Values.db.port }}/{{ .Values.db.name }}?sslmode=require"
        imagePullPolicy: IfNotPresent
      tolerations:
      - key: "isCamunda"
        operator: "Equal"
        value: "yes"
        effect: "NoSchedule"
      nodeSelector:
        camunda: single